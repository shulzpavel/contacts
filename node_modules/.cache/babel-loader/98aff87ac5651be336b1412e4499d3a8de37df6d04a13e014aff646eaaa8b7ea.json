{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SORT_CONTACTS } from './contactsActions';\nconst initialState = {\n  contacts: [{\n    \"name\": \"Иван\",\n    \"lastname\": \"Иванов\",\n    \"phone\": \"+7 123-456-7890\"\n  }, {\n    \"name\": \"Алексей\",\n    \"lastname\": \"Алексеев\",\n    \"phone\": \"+7 123-256-7890\"\n  }, {\n    \"name\": \"Анна\",\n    \"lastname\": \"Иванова\",\n    \"phone\": \"+7 123-556-7890\"\n  }, {\n    \"name\": \"Валерий\",\n    \"lastname\": \"Валерьев\",\n    \"phone\": \"+7 123-656-7890\"\n  }, {\n    \"name\": \"Екатерина\",\n    \"lastname\": \"Смирнова\",\n    \"phone\": \"+7 987-654-3210\"\n  }, {\n    \"name\": \"Алексей\",\n    \"lastname\": \"Петров\",\n    \"phone\": \"+7 555-555-5555\"\n  }],\n  get contacts() {\n    return this._contacts;\n  },\n  set contacts(value) {\n    this._contacts = value;\n  },\n  sortBy: 'name',\n  searchContact: [],\n  searchWord: ''\n};\nconst getContactsBySort = (contacts, sort) => {\n  return contacts.sort((a, b) => a === null || a === void 0 ? void 0 : a[sort].localeCompare(b[sort]));\n};\nconst contactsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact !== action.payload)\n      };\n    case SORT_CONTACTS:\n      return {\n        ...state,\n        contacts: getContactsBySort(state.contacts, action.payload),\n        sortBy: action.payload\n      };\n    case 'SEARCH_CONTACTS':\n      return {\n        ...state,\n        searchContact: state.contacts.filter(({\n          name\n        }) => name.toLowerCase().includes(action.payload.toLowerCase())),\n        searchWord: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default contactsReducer;","map":{"version":3,"names":["ADD_CONTACT","DELETE_CONTACT","SORT_CONTACTS","initialState","contacts","_contacts","value","sortBy","searchContact","searchWord","getContactsBySort","sort","a","b","localeCompare","contactsReducer","state","action","type","payload","filter","contact","name","toLowerCase","includes"],"sources":["/Users/paulshults/Desktop/dev/contacts/src/redux/contactsReducer.js"],"sourcesContent":["import { ADD_CONTACT, DELETE_CONTACT, SORT_CONTACTS } from './contactsActions';\n\n\nconst initialState = {\n  contacts: [\n    {\n      \"name\": \"Иван\",\n      \"lastname\": \"Иванов\",\n      \"phone\": \"+7 123-456-7890\"\n    },\n    {\n      \"name\": \"Алексей\",\n      \"lastname\": \"Алексеев\",\n      \"phone\": \"+7 123-256-7890\"\n    },\n    {\n      \"name\": \"Анна\",\n      \"lastname\": \"Иванова\",\n      \"phone\": \"+7 123-556-7890\"\n    },\n    {\n      \"name\": \"Валерий\",\n      \"lastname\": \"Валерьев\",\n      \"phone\": \"+7 123-656-7890\"\n    },\n    {\n      \"name\": \"Екатерина\",\n      \"lastname\": \"Смирнова\",\n      \"phone\": \"+7 987-654-3210\"\n    },\n    {\n      \"name\": \"Алексей\",\n      \"lastname\": \"Петров\",\n      \"phone\": \"+7 555-555-5555\"\n    }\n  ],\n  get contacts() {\n    return this._contacts;\n  },\n  set contacts(value) {\n    this._contacts = value;\n  },\n    sortBy: 'name',\n    searchContact: [],\n    searchWord: ''\n};\n\nconst getContactsBySort = (contacts, sort) => {\n    return contacts.sort((a, b) => a?.[sort].localeCompare(b[sort]));\n}\n\nconst contactsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload],\n            };\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter((contact) => contact !== action.payload),\n            };\n        case SORT_CONTACTS:\n            return {\n                ...state,\n                contacts: getContactsBySort(state.contacts, action.payload),\n                sortBy: action.payload,\n            };\n        case 'SEARCH_CONTACTS':\n            return {\n                ...state,\n                searchContact: state.contacts.filter(({name}) => name.toLowerCase().includes(action.payload.toLowerCase())),\n                searchWord: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default contactsReducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,EAAEC,aAAa,QAAQ,mBAAmB;AAG9E,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,QAAQ;IACpB,OAAO,EAAE;EACX,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,UAAU,EAAE,UAAU;IACtB,OAAO,EAAE;EACX,CAAC,EACD;IACE,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,SAAS;IACrB,OAAO,EAAE;EACX,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,UAAU,EAAE,UAAU;IACtB,OAAO,EAAE;EACX,CAAC,EACD;IACE,MAAM,EAAE,WAAW;IACnB,UAAU,EAAE,UAAU;IACtB,OAAO,EAAE;EACX,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,UAAU,EAAE,QAAQ;IACpB,OAAO,EAAE;EACX,CAAC,CACF;EACD,IAAIA,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,SAAS;EACvB,CAAC;EACD,IAAID,QAAQA,CAACE,KAAK,EAAE;IAClB,IAAI,CAACD,SAAS,GAAGC,KAAK;EACxB,CAAC;EACCC,MAAM,EAAE,MAAM;EACdC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACN,QAAQ,EAAEO,IAAI,KAAK;EAC1C,OAAOP,QAAQ,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAGD,IAAI,CAAC,CAACG,aAAa,CAACD,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC;AACpE,CAAC;AAED,MAAMI,eAAe,GAAGA,CAACC,KAAK,GAAGb,YAAY,EAAEc,MAAM,KAAK;EACtD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKlB,WAAW;MACZ,OAAO;QACH,GAAGgB,KAAK;QACRZ,QAAQ,EAAE,CAAC,GAAGY,KAAK,CAACZ,QAAQ,EAAEa,MAAM,CAACE,OAAO;MAChD,CAAC;IACL,KAAKlB,cAAc;MACf,OAAO;QACH,GAAGe,KAAK;QACRZ,QAAQ,EAAEY,KAAK,CAACZ,QAAQ,CAACgB,MAAM,CAAEC,OAAO,IAAKA,OAAO,KAAKJ,MAAM,CAACE,OAAO;MAC3E,CAAC;IACL,KAAKjB,aAAa;MACd,OAAO;QACH,GAAGc,KAAK;QACRZ,QAAQ,EAAEM,iBAAiB,CAACM,KAAK,CAACZ,QAAQ,EAAEa,MAAM,CAACE,OAAO,CAAC;QAC3DZ,MAAM,EAAEU,MAAM,CAACE;MACnB,CAAC;IACL,KAAK,iBAAiB;MAClB,OAAO;QACH,GAAGH,KAAK;QACRR,aAAa,EAAEQ,KAAK,CAACZ,QAAQ,CAACgB,MAAM,CAAC,CAAC;UAACE;QAAI,CAAC,KAAKA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,MAAM,CAACE,OAAO,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC;QAC3Gd,UAAU,EAAEQ,MAAM,CAACE;MACvB,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}